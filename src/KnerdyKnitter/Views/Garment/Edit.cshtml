@model KnerdyKnitter.Models.Garment


<form asp-for="Edit" asp-controller="Garment" id="editForm">
    <label asp-for="ColDim">Number of Stitches</label>
    @Html.TextBoxFor(model => model.ColDim, new { @Value = Model.ColDim })
    <label asp-for="RowDim">Number of Rows</label>
    @Html.TextBoxFor(model => model.RowDim)
    <label asp-for="Rule">Rule: </label>
    @Html.TextBoxFor(model => model.Rule)
    @Html.HiddenFor(model => model.KnitterId)
    <label>1st Color: </label>
    <input type="color" onchange="changePrimary(this.value)" value ="@Model.Colors[0].Hex" name="primary" id="primaryColor">
    <label>2nd Color: </label>
    <input type="color" onchange="changeSecondary(this.value)" value ="@Model.Colors[1].Hex" name="secondary" id="secondaryColor">
    <input type="submit" name="editBtn" value="Try"/>
    <input type="submit" name="editBtn" value="Save changes" />
</form>

@{ int xCoor = 0;
   int yCoor = 0;}
<script src="https://code.jquery.com/jquery-3.1.1.js"
        integrity="sha256-16cdPddA6VdVInumRGo6IbivbERE8p7CQR3HzTBuELA="
        crossorigin="anonymous"></script>
<script src="~/js/d3.min.js" type="text/javascript"></script>

<svg id="scarf" width="1000" height="1000">
    @foreach (var row in Model.Creation)
    {
        @foreach (var cell in row)
        {
            string alterColor=null;
            @foreach (var alter in Model.Alters)
            {
                if (alter.XCor == xCoor && alter.YCor == yCoor)
                {
                    alterColor = alter.Color;
                }
            }
            @if(alterColor != null)
            {
                @if(cell == true)
                {
                    <rect class="cell" id="r@xCoor-@yCoor" x="@xCoor" y="@yCoor" width="10" height="10" style="fill:@alterColor;stroke-width:1;stroke:black;" />
                }
                @if (cell == false )
                {
                    <rect class="secondaryColor cell" id="r@(xCoor)-@yCoor" x="@xCoor" y="@yCoor" width="10" height="10" style="fill:@alterColor;stroke-width:1;stroke:black;" />
                }
            }
            else
            {
                @if (cell == true)
                {
                    <rect class="secondaryColor cell" id="r@(xCoor)-@yCoor" x="@xCoor" y="@yCoor" width="10" height="10" style="stroke-width:1;stroke:black;" />
                }
                @if (cell == false)
                {
                    <rect class="primaryColor cell" id="r@(xCoor)-@yCoor" x="@xCoor" y="@yCoor" width="10" height="10" style="stroke-width:1;stroke:black;" />
                }
            }
            @(xCoor = xCoor + 10)
        }
        @(yCoor = yCoor + 10)
        @(xCoor = 0)
    }
</svg>

<form asp-action="Delete" asp-controller="Garment" method="post">
    <input type="hidden" value="@Model.Id" name="garmentId"/>
    <button type="submit">Delete Garment</button>
</form>

<script>
    var allAlters = [];

    function changePrimary(color) {
        $(".primaryColor").css("fill", color);
        $(".primaryColor").unbind("click");
        $(".secondaryColor").unbind("click");
        for (var j = 0; j < 1000; j = j + 10) {
            for (var i = 0; i < 120; i = i + 10) {
                var clickID = "#r" + i + "-" + j;
                $(clickID).click(function (event) {
                    var currentId = "#" + $(this).attr('id');
                    var currentColor = $(currentId).css('fill');
                    var secondary = $("#secondaryColor").val();
                    var colorAsHex = rgbToHex(currentColor);
                    var primary = $("#primaryColor").val();

                    if (colorAsHex === primary) {
                        $(currentId).css("fill", secondary);
                        $(currentId).removeClass("primaryColor");
                        $(currentId).addClass("secondaryColor");
                        addAlter(currentId);
                    }
                    else {
                        $(currentId).css("fill", primary);
                        $(currentId).removeClass("secondaryColor");
                        $(currentId).addClass("primaryColor");
                        addAlter(currentId);
                    }
                });
            }
        }
    }
        function changeSecondary(color) {
            $(".secondaryColor").css("fill", color);
            $(".primaryColor").unbind("click");

            $(".secondaryColor").unbind("click");
            for (var j = 0; j < 1000; j = j + 10) {
                for (var i = 0; i < 120; i = i + 10) {
                    var clickID = "#r" + i + "-" + j;
                    $(clickID).click(function (event) {
                        var currentId = "#" + $(this).attr('id');
                        var currentColor = $(currentId).css('fill');
                        var colorAsHex = rgbToHex(currentColor);
                        var primary = $("#primaryColor").val();

                        var secondary = $("#secondaryColor").val();
                        if (colorAsHex === secondary) {
                            $(currentId).css("fill", primary);
                            $(currentId).removeClass("secondaryColor");
                            $(currentId).addClass("primaryColor");
                            addAlter(currentId);
                        }
                        else {
                            $(currentId).css("fill", secondary);
                            $(currentId).removeClass("primaryColor");
                            $(currentId).addClass("secondaryColor");
                            addAlter(currentId);
                        }
                    });
                }
            }
        }


    $(document).ready(function () {
        $(".primaryColor").css("fill", "@(Model.Colors[0].Hex)");
        $(".secondaryColor").css("fill", "@(Model.Colors[1].Hex)");
        for (var j = 0; j < 1000; j = j + 10) {
            for (var i = 0; i < 120; i = i + 10) {
                var clickID = "#r" + i +"-"+ j;
                $(clickID).click(function (event) {
                    var currentId = "#" + $(this).attr('id');
                    var color = $(currentId).css('fill');
                    colorAsHex = rgbToHex(color);
                    var secondary = $("#secondaryColor").val();
                    var primary = $("#primaryColor").val();
                    if (colorAsHex === secondary) {
                        $(currentId).css("fill", primary);
                        $(currentId).removeClass("secondaryColor");
                        $(currentId).addClass("primaryColor");
                        addAlter(currentId);
                    }
                    else{
                        $(currentId).css("fill", secondary);
                        $(currentId).removeClass("primaryColor");
                        $(currentId).addClass("secondaryColor");
                        addAlter(currentId);
                    }
                });
            }
        }

        $("#editForm").submit(function (event) {
            event.preventDefault();
            console.log($(this).serialize());
            var model = { allAlters: getAlters(), object: $(this).serialize(), primary: $("#primaryColor").val(), secondary: $("#secondaryColor").val(), editBtn: $("input[name=editBtn]").val()}
            $.ajax({
                type: 'POST',
                data: model,
                url: '@Url.Action("Edit", "Garment")',
                datatype: "json",
                success: function (result) {
                    if (result != null) {
                        console.log(result);
                        for (var y = 0; y < result.creation.length; y += 10) {
                            for (var x = 0; x < result.creation[y].length; x += 10) {
                                d3.select("#scarf")
                                    .append("rect")
                                    .attr("class", "cell")
                                    .attr("id", "r" + x + "-" + y)
                                    .attr("x", x)
                                    .attr("y", y)
                                    .attr("width", 10)
                                    .attr("height", 10);
                                if (result.creation[y][x] === true) {
                                    d3.selectAll("#r" + x + "-" + y)
                                        .attr("class", "secondaryColor");
                                }
                                if (result.creation[y][x] === false) {
                                    d3.selectAll("#r" + x + "-" + y)
                                        .attr("class", "primaryColor");
                                }
                            }
                        }
                    }
                }
            });
        });

    });
        function breakRgb(color) {
            var pattern = /\d+/g;
            var colorArr = color.match(pattern);
            return colorArr;
        }
        function intToHex(c) {
            var hex = parseInt(c).toString(16);
            return hex.length == 1 ? "0" + hex : hex;
        }

        function rgbToHex(color) {
            var colorArr = breakRgb(color);
            return "#" + intToHex(colorArr[0]) + intToHex(colorArr[1]) + intToHex(colorArr[2]);
        }

        function addAlter(id) {
            var alter = [];
            alter[0] = rgbToHex($(id).css('fill'));
            alter[1]=(id);
            allAlters.push(alter);
            console.log(alter[0]);
            console.log(alter[1]);

        }
        function getAlters() {
            console.log(allAlters[0][0]);
            return allAlters;
        }
</script>
