@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@model KnerdyKnitter.Models.Garment
<div class="row">
    <div class="col s12 m6 l6">

        <p for="Rule">Rule: <span class="ruleDecimal"></span></p>
        @{ int baseX = 0;
        int index = 0; }
        <svg id="baseCombos" width="350" height="50">
        @foreach (var baseCombo in ViewBag.BaseCombos)
        {
            @foreach (var cell in baseCombo)
            {
                @if ((cell == "Tru") || (cell == "True"))
                {
                    <rect class="primaryColor cell" x="@baseX" y="0" width="10" height="10" style="stroke-width:1;stroke:black;" />
                }
                else
                {
                    <rect class="secondaryColor cell" x="@baseX" y="0" width="10" height="10" style="stroke-width:1;stroke:black;" />
                }
                @(baseX += 10)
            }
            @if (Model.Rule[index] == '1')
            {
                <rect id="ruleCell@(index)" onchange="changeRuleVis()" class="secondaryColor cell" x="@(baseX - 20)" y="10" width="10" height="10" style="stroke-width:1;stroke:black;" />
            }
            else
            {
                <rect id="ruleCell@(index)" onchange="changeRuleVis()" class="primaryColor cell" x="@(baseX - 20)" y="10" width="10" height="10" style="stroke-width:1;stroke:black;" />
            }

            baseX += 10;
                index++; 
        }
        </svg>
        <form id="editForm">
            <label for="colDim">Number of Stitches</label>
            <input type="text" value="@Model.ColDim" name="colDim" id="colDim" onchange="changeRule()">
            <input type="hidden" value="@Model.RowDim" name="rowDim" id="rowDim">
            <input type="hidden" value="@Model.Rule" name="chosenRule" id="chosenRule" onchange="changeRule()">
            <input type="hidden" value="@Model.Id" name="garmentId" id="garmentId">
            <label>1st Color: </label>
            <input type="color" onchange="changePrimary(this.value)" value="@Model.Colors[0].Hex" name="primary" id="primaryColor">
            <label>2nd Color: </label>
            <input type="color" onchange="changeSecondary(this.value)" value="@Model.Colors[1].Hex" name="secondary" id="secondaryColor"><br />
            <input type="button" id="try" value="Try" />
            <input type="submit" id="saveChanges" value="Save changes" />
        </form>
        @if (Model.Id != 0)
        {
            <form asp-action="Delete" asp-controller="Garment" method="post">
                <input type="hidden" value="@Model.Id" name="garmentId" />
                <button type="submit">Delete Garment</button>
            </form>
        }
        <div id="changesSaved">Your changes were saved.</div>

        </div>
    <div class="col s12 m6 l6">

    @{ int xCoor = 0;
        int yCoor = 0;
        var svgWidth = Model.ColDim * 10;
        var svgHeight = Model.RowDim * 10; }
        <div id="scarfBox">
            <svg id="scarf" width="@(svgWidth)" height="@(svgHeight)">
                @for (var i = 0; i < Model.RowDim; i++)
                {
                    @foreach (var cell in Model.Creation[i])
                    {
                        string alterColor = null;
                        @foreach (var alter in Model.Alters)
                        {
                            if (alter.XCor == xCoor && alter.YCor == yCoor)
                            {
                                alterColor = alter.Color;
                            }
                        }
                        @if (alterColor != null)
                        {
                            @if (cell == true)
                            {
                                <rect class="cell" id="r@xCoor-@yCoor" x="@xCoor" y="@yCoor" width="10" height="10" style="fill:@alterColor;stroke-width:1;stroke:black;" />
                            }
                            @if (cell == false)
                            {
                                <rect class="secondaryColor cell" id="r@(xCoor)-@yCoor" x="@xCoor" y="@yCoor" width="10" height="10" style="fill:@alterColor;stroke-width:1;stroke:black;" />
                            }
                        }
                        else
                        {
                            @if (cell == true)
                            {
                                <rect class="primaryColor cell scarf" id="r@(xCoor)-@yCoor" x="@xCoor" y="@yCoor" width="10" height="10" style="stroke-width:1;stroke:black;" />
                            }
                            @if (cell == false)
                            {
                                <rect class="secondaryColor cell scarf" id="r@(xCoor)-@yCoor" x="@xCoor" y="@yCoor" width="10" height="10" style="stroke-width:1;stroke:black;" />
                            }
                        }
                        @(xCoor = xCoor + 10)
                    }
                    @(yCoor = yCoor + 10)
                    @(xCoor = 0)
                }
            </svg>
        </div>
    
    </div>
    </div>


    

<script>
    var allAlters = [];
    function changePrimary(color) {
        $(".primaryColor").css("fill", color);
        $(".scarf").unbind("click");
        for (var j = 0; j < 1000; j = j + 10) {
            for (var i = 0; i < 120; i = i + 10) {
                var clickID = "#r" + i + "-" + j;
                $(clickID).click(function (event) {
                    var currentId = "#" + $(this).attr('id');
                    var currentColor = $(currentId).css('fill');
                    var secondary = $("#secondaryColor").val();
                    var colorAsHex = rgbToHex(currentColor);
                    var primary = $("#primaryColor").val();

                    if (colorAsHex === primary) {
                        $(currentId).css("fill", secondary);
                        $(currentId).removeClass("primaryColor");
                        $(currentId).addClass("secondaryColor");
                        addAlter(currentId);
                    }
                    else {
                        $(currentId).css("fill", primary);
                        $(currentId).removeClass("secondaryColor");
                        $(currentId).addClass("primaryColor");
                        addAlter(currentId);
                    }
                });
            }
        }
    }
    function changeSecondary(color) {
        $(".secondaryColor").css("fill", color);
        $(".scarf").unbind("click");
        for (var j = 0; j < 1000; j = j + 10) {
            for (var i = 0; i < 120; i = i + 10) {
                var clickID = "#r" + i + "-" + j;
                $(clickID).click(function (event) {
                    var currentId = "#" + $(this).attr('id');
                    var currentColor = $(currentId).css('fill');
                    var colorAsHex = rgbToHex(currentColor);
                    var primary = $("#primaryColor").val();
                    var secondary = $("#secondaryColor").val();
                    if (colorAsHex === secondary) {
                        $(currentId).css("fill", primary);
                        $(currentId).removeClass("secondaryColor");
                        $(currentId).addClass("primaryColor");
                        addAlter(currentId);
                    }
                    else {
                        $(currentId).css("fill", secondary);
                        $(currentId).removeClass("primaryColor");
                        $(currentId).addClass("secondaryColor");
                        addAlter(currentId);
                    }
                });
            }
        }
    }
        
    function changeRule() {
        var model = {
            chosenRule: $("#chosenRule").val(),
            colDim: parseInt($("#colDim").val()),
            rowDim: parseInt($("#rowDim").val()),
        }
        $.ajax({
            type: 'GET',
            data: model,
            url: '@Url.Action("ChangeRule")',
            success: function (result) {
                console.log("ajax");
                if (result != null) {
                    console.log(result);
                    d3.select('#chosenRule').attr('value', result.rule);
                    $(".ruleDecimal").text(parseInt(result.rule, 2))
                    d3.select('#rowDim').attr('value', result.rowDim);
                    d3.select('#colDim').attr('value', result.colDim);
                    d3.select('svg#scarf').attr('width', (result.colDim*10)).attr('width', (result.rowDim*10));
                    d3.select("#scarf").html("");
                    var row = 0;
                    var col = 0;
                    for (var y = 0; y < result.rowDim; y ++) {
                        for (var x = 0; x < result.colDim; x++) {
                            row = y * 10;
                            col = x * 10;
                            d3.select("#scarf")
                                .append("rect")
                                .attr("id", "r" + col + "-" + row)
                                .attr("x", col)
                                .attr("y", row)
                                .attr("width", 10)
                                .attr("height", 10);
                            if (result.creation[y][x] === true) {
                                d3.select("#r" + col + "-" + row)
                                    .attr("class", "primaryColor cell scarf");
                            }
                            else {
                                d3.select("#r" + col + "-" + row)
                                    .attr("class", "secondaryColor cell scarf");
                            }
                            var clickID = "#r" + col + "-" + row;
                            $(clickID).click(function (event) {
                                var currentId = "#" + $(this).attr('id');
                                var color = $(currentId).css('fill');
                                colorAsHex = rgbToHex(color);
                                var secondary = $("#secondaryColor").val();
                                var primary = $("#primaryColor").val();
                                if (colorAsHex === secondary) {
                                    $(currentId).removeClass("secondaryColor");
                                    $(currentId).addClass("primaryColor");
                                    addAlter(currentId);
                                }
                                else {
                                    $(currentId).removeClass("primaryColor");
                                    $(currentId).addClass("secondaryColor");
                                    addAlter(currentId);
                                }
                            });
                        }
                    }
                    $(".primaryColor").css("fill", $("#primaryColor").val());
                    $(".secondaryColor").css("fill", $("#secondaryColor").val());
                }
            }
        });
    }

    $(document).ready(function () {
        var binaryRule = $("#chosenRule").val();
        $(".ruleDecimal").text(parseInt(binaryRule, 2))
        console.log(binaryRule);
        $(".primaryColor").css("fill", "@(Model.Colors[0].Hex)");
        $(".secondaryColor").css("fill", "@(Model.Colors[1].Hex)");
        //$("#ruleDecimal")
        for(var l = 0; l<8;l++){
            var ruleCellId = "#ruleCell"+l;
            var pattern = ""
            $(ruleCellId).click(function(){
                var currentId = "#" + $(this).attr('id');
                var pattern = /\d/g;
                var index = currentId.match(pattern).toString();
                var chosenRule= $("#chosenRule").val();
                if(chosenRule[index]=="1"){
                    var nextIndex = parseInt(index)+1;
                    var firstSub = chosenRule.substr(nextIndex);
                    chosenRule = chosenRule.substr(0,index)+"0"+firstSub;
                    console.log(chosenRule);

                    $(currentId).removeClass("secondaryColor");
                    $(currentId).addClass("primaryColor");
                    addAlter(currentId);
                    d3.select("#chosenRule").attr("value", chosenRule);   

                }
                else {
                    var nextIndex = parseInt(index)+1;
                    var firstSub = chosenRule.substr(nextIndex);
                    chosenRule = chosenRule.substr(0,index)+"1"+firstSub;

                        console.log(chosenRule);

                    $(currentId).removeClass("primaryColor");
                    $(currentId).addClass("secondaryColor");
                    addAlter(currentId);
                    d3.select("#chosenRule").attr("value", chosenRule);   
                }
                changeRule();
            });

        }
        for (var j = 0; j < @(Model.RowDim); j = j + 10) {
            for (var i = 0; i < @(Model.ColDim); i = i + 10) {
                var clickID = "#r" + i +"-"+ j;
                $(clickID).click(function (event) {
                    var currentId = "#" + $(this).attr('id');
                    var color = $(currentId).css('fill');
                    colorAsHex = rgbToHex(color);
                    var secondary = $("#secondaryColor").val();
                    var primary = $("#primaryColor").val();
                    if (colorAsHex === secondary) {
                        $(currentId).css("fill", primary);
                        $(currentId).removeClass("secondaryColor");
                        $(currentId).addClass("primaryColor");
                        addAlter(currentId);
                    }
                    else{
                        $(currentId).css("fill", secondary);
                        $(currentId).removeClass("primaryColor");
                        $(currentId).addClass("secondaryColor");
                        addAlter(currentId);
                    }
                });
            }
        }
        $("#try").click(function () {
            $(this).attr("name", "btnClicked");
        });
        $("#saveChanges").click(function () {
            $(this).attr("name", "btnClicked");
        });

        $("#editForm").submit(function (event) {
            event.preventDefault();
            var model = {
                allAlters: getAlters(),
                chosenRule: $("#chosenRule").val(),
                colDim: $("#colDim").val(),
                rowDim: $("#rowDim").val(),
                garmentId: $("#garmentId").val(),
                primary: $("#primaryColor").val(),
                secondary: $("#secondaryColor").val(),
                editBtn: $("input[name=btnClicked]").val()
            }
            $.ajax({
                type: 'POST',
                data: model,
                url: '@Url.Action("Edit")',
                success: function (result) {
                    $('#changesSaved').fadeIn('slow').delay(3000).fadeOut('slow');
                    if (result != null) {
                        console.log(result);
                        d3.select('#garmentId').attr('value', result);
                    }
                        //for (var y = 0; y < result.creation.length; y += 10) {
                        //    for (var x = 0; x < result.creation[y].length; x += 10) {
                        //        d3.select("#scarf")
                        //            .append("rect")
                        //            .attr("class", "cell")
                        //            .attr("id", "r" + x + "-" + y)
                        //            .attr("x", x)
                        //            .attr("y", y)
                        //            .attr("width", 10)
                        //            .attr("height", 10);
                        //        if (result.creation[y][x] === true) {
                        //            d3.selectAll("#r" + x + "-" + y)
                        //                .attr("class", "secondaryColor");
                        //        }
                        //        if (result.creation[y][x] === false) {
                        //            d3.selectAll("#r" + x + "-" + y)
                        //                .attr("class", "primaryColor");
                        //        }
                        //    }
                        //}
                    }

            });
        });

    });
        function breakRgb(color) {
            var pattern = /\d+/g;
            var colorArr = color.match(pattern);
            return colorArr;
        }
        function intToHex(c) {
            var hex = parseInt(c).toString(16);
            return hex.length == 1 ? "0" + hex : hex;
        }

        function rgbToHex(color) {
            var colorArr = breakRgb(color);
            return "#" + intToHex(colorArr[0]) + intToHex(colorArr[1]) + intToHex(colorArr[2]);
        }

        function addAlter(id) {
            var alter = [];
            alter[0] = rgbToHex($(id).css('fill'));
            alter[1]=(id);
            allAlters.push(alter);
        }
        function getAlters() {
            return allAlters;
        }

</script>
